练习，经验，储备

目的：
为了检验自己的学习成果，为了更快的学习Linux系统相关知识。现在给自己拟定一个综合性的项目来作为自己练习使用，同时也为了给自己储备项目经验，积累项目的资源而做出的决定
要求：
1、记录下开发过程中的疑点，难点和解决方法。记录开发过程中的心得体会
2、使用git代码管理工具进行代码托管

大致步骤：
1、移植QT到JZ2440上面，并实现按钮控制LED的操作（点亮指路灯啊）。
风险：a、QT的运用还不熟练，特别是QT与硬件关联起来
    b、移植过程中的内核配置

2、将数码相框的项目使用QT重写出来。实现数码相框的所有功能。
风险：a、QT需要多加学习
   b、数码相框的原始框架还没真正了解，
   c、数码相框到QT的迁移问题。

3、把视频监控的项目迁移到QT上面去。
风险：a、视频监控项目的cmos摄像头还没有看完
    b、迁移到QT的一些框架的兼容性问题

4、将数码相框和视频监控项目合并起来。加入QT写的项目
风险：a、涉及两个QT项目的整合。
          b、框架问题

6、电脑上使用QT做出客户端（CS架构），开发板上做出服务端通过网络通信将监控数据 发送到
     电脑，电脑可以下发控制命令做出相应的控制。
风险：a、涉及网络编程了，网络编程方面需要加强才行。
   b、CS架构需要多了解，

7、通过wifi信号将监控数据发送给手机app，进行无线视频监控
风险：a、wifi模块具体使用方法不明确
   b、手机app不会写 

8、移植声卡播放mp3文件
风险：a、alse声卡不会。

9、移植mjpg-streamer，结合QT写出客户端和服务端。 
风险：a、mjpg-streamer需要看第三期的东西

10、迁移上面的应用程序到iTop4412开发板上面，使用新的内核、新的uboot和文件系统。
风险：未知

11、开发板上面搭建Web-Service，电脑端通过网页获取摄像头数据并控制开发板的行为。
风险：a、web服务器的搭建，
   b、web应用程序的开发

12、结合电脑端搭建web服务器将监控的数据发送到外网。使得在外网也可以收到视频监控的数
       据。
风险：a、网络通信，nat映射，等网络知识需要加强

13、web-service端搭建本地控制终端，对智能家居系统进行控制。
风险：未知

14、搭建数据库对家庭的成员喜好等，进行管理
风险：a、数据库编程不熟悉

15、迁移到安卓系统来实现。。。。。。（未完待续）
风险：未知

项目要求：
1、全部使用git托管代码，建立代码仓库 。来进行代码的管理
2、全部使用Linux办公环境开发。
3、使用eclips+cdt集成开发环境，和arm-linux-gcc编译器。






